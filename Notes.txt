1. Number,operator and comments
-----------------------------------------------------------
print(52+2) -> To output, if run from script
52+2 -> no output if run from script
type(5)-> class int
math operation based on PEMDAS (parenthesis, exponents, multiplication, division, addition, subtraction)
Division (1/2) -> 0.5 (unlike other languages, divisions returns float not int)
comments -> #
** -> Exponentiation
// -> Integer division -> returns int unlike divisison
BuiltInFunctions

===========================================================================================================
2. Variable and strings
--------------------------------------------------------
x = 100
raj_number = 1
print(x+raj_number) = 101
x*2 = 200
print(x) -> remains 100
x,y,z = 10,20,30
to see vaue in powershell -> print(x) or x //10
z=z-y ->z=10

3. Naming Restrictions
---------------------------------------------------------
variable must start with letter or underscore
the rest of the name must consist of letter,numbers, underscore
names are case sensitive
eg - shilpi@gmail =2 // syntax error

4. Naming Conventions
--------------------------------------------
Most variable should be snake_case(underscore between words)
capital snake case refers to constant
variable should be lower case letters
variable that starts and ends with 2 underscore are private - eg -> _no_touchy
upper camel case usually refers to class
===========================================================================

5. Data Types
-----------------------------------------
Assigned value must be valid data type
Data Type -> 
 bool - True or False // is_active = True // is_active // only upper case for true and false not lower
 int - integer - > 1,2,3 //
 str - "shilpi" // can be in single or double quotes
 list - ordered sequence of values of other data types -> [1,2,3] or ["a","b"]
 dict - collection of key, values - eg -> {"first_name":"shilpi","last_name":"upadhyay"}
 
6. Dynamic Typing
-----------------------------------
python is flexible about reassigning variable to different types ->
abc = True

abc = "Shilpi"

abc = 22/7

abc = None -> here None is like java Null// None is case sensitive. none will throw error

eg - name = "Daisy"
age = 40
child = None // Daisy does not hve a child
if in script - child - does not print anything
if print (child) -> None
type(child) -> <class 'NoneType'>
===============================================================================
7. Declaring Stings
------------------------------------------------
String literals can be declared with single or double quotes
msg = "he said "hello"" // errorsolution - msg = "he said 'hello'" or vice versa
================================================
String Escape Characters
------------------------------------------------
In pythn escape characters are metacharacters

msg = "hi\nthere"
print(msg) -> 
hi
there

8. String Concatenation
---------------------------------------------------------
a = "you"
b = "are"
c = a + "" + b

8 + "hello" -> error
guess = 9
print("you guess of" + guess +"is wroong")// error -> cannot concatenate int and string

9. Formatting Strings
---------------------------------------------------------
one way:
Format strings in python to interpolate variables
x = 10
formatted = f"I have told {x} times"
eg -
guess = 9
print(f"you guess of" {guess} is wroong")
print(f"you guess of" {guess+1} is wroong")
2nd way:.format() method
x=10
formatted = "I have told {} times".forward(10)
3rd way: % operator - deprecated
x=10
formatted = "I have told %d times" %(x) 
----------------------------------------------------------
"lol" - it is stored with indexes
lol[0] -> l

name = "shalu"
name[-1] // u
==================================================
10. Converting Data Types
-----------------------------------------------------------

x = 12.343636
y = int(x)//12

my_list = [1,2,3]
y = str(my_list) //"[1,2,3]"

==============================================
11. user input ->
----------------------------------------------
name = input("enter your name")
km = input()
round() -> how many decimal digits
eg - round(km,2)
print(f"you chose{km}")
 
===============================================
12. Boolean and conditional logic
------------------------------------------------------

Conditional statements - 
if some condition is True:
 Do something
elif other condn is True
 Do something
else:
 do something

-> python is whitespace sensitive #gives indentation error

eg -> if name == "shilpi":
      print("hi")
	  elif name == "shalu":
	      print ("hello")
		  else:
		  print ("bye!")
		  
you can have many elif if required

==============================================
13. Truthiness and Falsiness
---------------------------------
is keyword ->
x = 1
x is 1 #True
x is 0 #False

Natural false - empty object, empty string, None, zero
so everything except above is truthy

==========================================================
14. Comparision Operators
-----------------------------------
1 == 1 #True
==
!=
>
<
>=
<=
===========================================================
15. Logical operators
------------------------------------------
and
or
not
===========================================================
16. is vs "=="
---------------------------------------------------
a = 1
a is 1 #True
a== 1 #True

a = [1,2,3]
b = [1,2,3]
a == b # True it checks value
a is b # False . it checks reference - memory
================================================
To print anything n number of times ->
print("Hello\n" * n)
print("Hello\n" * 20) # prints 20 times

To import -

From import random randint

====================================
Looping
------------------------------------


 






